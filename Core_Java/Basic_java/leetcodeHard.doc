public int findInMountainArray(int target, MountainArray mountainArr) {
        
        
    }
    public int search(int[] arr,int target){
        int peak=peakIndexInMountainArray(arr);
        int Firsttry=orderagnosticBs(arr,target,0,peak);
        if(Firsttry!=-1)
            return Firsttry;
        else if(orderagnosticBs(arr,target,peak+1,arr.length-1)!=-1)
            return orderagnosticBs(arr,target,peak+1,arr.length-1);
        else 
            return -1;
    }
    public int peakIndexInMountainArray(int[] arr) {
        int start=0;
        int end=arr.length-1;
        while(start<end){
            int mid=start+(end-start)/2;
            if(arr[mid]>arr[mid+1])
                end=mid;
            else
                start=mid+1;
        }
        return start;
    }
    int orderagnosticBs(int[] arr, int target,int start,int end){
        boolean isAsc=arr[0]<arr[arr.length-1];
        int mid=start+(end-start)/2;
        while(start<=end)
        {
            if(target==arr[mid])
                return mid;
            if(isAsc)
            {
                if(target>arr[mid])
                    start=mid+1;
                else
                    end=mid-1;
            }
            else
            {
                if(target>arr[mid])
                    end=mid-1;
                else 
                    start=mid+1;
            }            
        }
        return -1;
    }
}